% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_flextable.cond_indirect_effects.R
\name{as_flextable.cond_indirect_effects}
\alias{as_flextable.cond_indirect_effects}
\title{Convert an 'indirect_list' Object to a \code{flextable} Object}
\usage{
\method{as_flextable}{cond_indirect_effects}(
  x,
  add_sig = FALSE,
  pvalue = FALSE,
  se = TRUE,
  var_labels = NULL,
  digits = 3,
  pval_digits = 3,
  pcut = 0.001,
  use_arrow = TRUE,
  indirect_raw = TRUE,
  indirect_raw_ci = TRUE,
  indirect_raw_se = TRUE,
  footnote = TRUE,
  show_indicators = FALSE,
  show_wvalues = TRUE,
  show_path = TRUE,
  ...
)
}
\arguments{
\item{x}{The object to be converted.
Should be of the class \code{indirect_list}
from the package \code{manymome}.}

\item{add_sig}{Whether a column is
added to denote significant effects
based on confidence intervals. Default
is \code{FALSE}. Not used for now.}

\item{pvalue}{If confidence intervals
are stored, whether asymmetric \emph{p}-values
are reported. Default is \code{FALSE}.}

\item{se}{Whether standard errors
are reported if confidence intervals
are stored. Default is \code{TRUE}.}

\item{var_labels}{A named vectors.
Used to replace variable names by
other names. For example,
\code{c(x = "I.V", y = "D.V.")} replaces
\code{x} by \code{"I.V"} and \code{y} by \code{"D.V."}
in the output.}

\item{digits}{The number of digits
to be displayed for most columns,
such as indirect effects. Default
is 3.}

\item{pval_digits}{The number of
digits to be displayed for the
\emph{p}-value column, if present. Default
is 3.}

\item{pcut}{Any \emph{p}-value less than
\code{pcut} will be displayed as \verb{p<[pcut]},
\code{"[pcut]"} replaced by the value of
\code{pcut}. Default is .001. Not used
for now.}

\item{use_arrow}{If \code{TRUE}, the
default, use the arrow symbol in
the paths.}

\item{indirect_raw}{If \code{TRUE}, the
default, report unstandardized effects
even if standardization was done.}

\item{indirect_raw_ci}{If \code{TRUE}, the
default, report the confidence intervals
of unstandardized effects
even if standardization was done
and confidence intervals were stored.}

\item{indirect_raw_se}{If \code{TRUE}, the
default, report the standard errors
of unstandardized effects
even if standardization was done
and confidence intervals were stored.}

\item{footnote}{If \code{TRUE}, the
default,
add footnote(s) regarding the results.}

\item{show_indicators}{Whether the values
of indicators (dummy variables) will
be shown for categorical moderators.
Default is \code{FALSE}.}

\item{show_wvalues}{Whether the values
of moderators will be shown. If \code{FALSE},
no values will be shown, even for
categorical moderators. Default is
\code{TRUE}.}

\item{show_path}{Whether the paths
being moderated will be displayed.
Default is \code{TRUE}.}

\item{...}{Additional arguments.
Ignored.}
}
\value{
A \code{flextable} object.
}
\description{
The 'as_flextable' method
for the output of 'manymome::many_indirect_effects()'.
}
\details{
It converts an \code{indirect_list}
object,
which is usually created by
\code{\link[manymome:cond_indirect]{manymome::many_indirect_effects()}},
to a \code{flextable} object. The output
can be further modified by functions
from the package \code{flextable}.
}
\examples{
# TO FIX

library(manymome)
data(data_med_complicated)
lm_m11 <- lm(m11 ~ x1 + x1 + x2 + c1 + c2, data_med_complicated)
lm_m12 <- lm(m12 ~ m11 + x1 + x2 + c1 + c2, data_med_complicated)
lm_m2 <- lm(m2 ~ x1 + x2 + c1 + c2, data_med_complicated)
lm_y2 <- lm(y2 ~ m11 + m12 + m2 + x1 + x2 + c1 + c2, data_med_complicated)
fit <- lm2list(lm_m11, lm_m12, lm_m2, lm_y2)
# All indirect paths
paths <- all_indirect_paths(fit,
                           x = c("x1", "x2"),
                           y = c("y2"),
                           exclude = c("c1", "c2"))
# Indirect paths from x1 to y2
paths_x1y2 <- all_indirect_paths(fit,
                           x = c("x1"),
                           y = c("y2"),
                           exclude = c("c1", "c2"))
# Indirect effect estimates
ind <- many_indirect_effects(paths,
                             fit = fit)
ind_x1y2 <- many_indirect_effects(paths_x1y2,
                                  fit = fit)
library(flextable)
ind_ft <- as_flextable(ind)
ind_ft
ind_x1y2 <- as_flextable(ind_x1y2)
ind_x1y2

}
